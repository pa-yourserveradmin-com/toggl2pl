---
variables:
  PACKAGE_ARCH: amd64
  PACKAGE_NAME: toggl2pl
  PACKAGE_VERSION: 1.0.6

stages:
  - coverage
  - build
  - verify
  - package
  - sign
  - release

coverage:report:
  before_script:
    - apt update
    - apt install --assume-yes binutils
    - pip install virtualenv
    - virtualenv --python=python3 venv
    - venv/bin/pip install --upgrade --requirement requirements.txt
    - venv/bin/pip install --upgrade --requirement tests/requirements.txt
  image: python:3.7.2-slim-stretch
  script:
    - venv/bin/coverage run -m pytest
    - venv/bin/coverage report
  stage: coverage
  tags:
    - docker
    - only
  variables:
    DEBIAN_FRONTEND: noninteractive

build:linux:
  artifacts:
    paths:
      - dist/${PACKAGE_NAME}
    expire_in: 15 mins
  before_script:
    - apt update
    - apt install --assume-yes binutils
    - pip install virtualenv
    - virtualenv --python=python3 venv
    - venv/bin/pip install --upgrade --requirement pyinstaller.txt
    - venv/bin/pip install --upgrade --requirement requirements.txt
  image: python:3.7.2-slim-stretch
  script:
    - venv/bin/pyinstaller --name ${PACKAGE_NAME} --onefile scripts/${PACKAGE_NAME}
  stage: build
  tags:
    - docker
    - only
  variables:
    DEBIAN_FRONTEND: noninteractive

build:windows:
  artifacts:
    paths:
      - .\dist\%PACKAGE_NAME%.exe
    expire_in: 15 mins
  before_script:
    - pip install virtualenv
    - virtualenv venv
    - .\venv\Scripts\pip.exe install --upgrade pywin32
    - .\venv\Scripts\pip.exe install --upgrade --requirement pyinstaller.txt
    - .\venv\Scripts\pip.exe install --upgrade --requirement requirements.txt
  script:
    - .\venv\Scripts\pyinstaller.exe --name %PACKAGE_NAME% --onefile .\scripts\%PACKAGE_NAME%
  stage: build
  tags:
    - python3.7
    - windows
  variables:
    PATH: C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\admin\AppData\Local\Programs\Python\Python37-32\Scripts\;C:\Users\admin\AppData\Local\Programs\Python\Python37-32\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;C:\Windows\System32\downlevel;

verify:rpm:el7:
  dependencies:
    - build:linux
  image: centos:7.6.1810
  script:
    - ./dist/${PACKAGE_NAME} --help
  stage: verify
  tags:
    - docker
    - only

verify:rpm:fc29:
  dependencies:
    - build:linux
  image: fedora:29
  script:
    - ./dist/${PACKAGE_NAME} --help
  stage: verify
  tags:
    - docker
    - only

verify:deb:jessie:
  dependencies:
    - build:linux
  image: debian:jessie-slim
  script:
    - ./dist/${PACKAGE_NAME} --help
  stage: verify
  tags:
    - docker
    - only

verify:deb:stretch:
  dependencies:
    - build:linux
  image: debian:stretch-slim
  script:
    - ./dist/${PACKAGE_NAME} --help
  stage: verify
  tags:
    - docker
    - only

verify:windows:
  dependencies:
    - build:windows
  image: debian:stretch-slim
  script:
    - .\dist\%PACKAGE_NAME%.exe --help
  stage: verify
  tags:
    - windows

package:docker:image:
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  dependencies:
    - build:linux
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${PACKAGE_NAME}:${PACKAGE_VERSION} .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${PACKAGE_NAME}:${PACKAGE_VERSION}
  stage: package
  tags:
    - docker
    - shell

package:linux:zip:
  artifacts:
    paths:
      - ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip
    expire_in: 15 mins
  before_script:
    - dnf --assumeyes install zip
  dependencies:
    - build:linux
  image: fedora:29
  script:
    - zip -9 -j ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip dist/${PACKAGE_NAME}
  stage: package
  tags:
    - docker
    - only

package:windows:zip:
  artifacts:
    paths:
      - ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip
    expire_in: 15 mins
  before_script:
    - dnf --assumeyes install zip
  dependencies:
    - build:windows
  image: fedora:29
  script:
    - zip -9 -j ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip dist/${PACKAGE_NAME}.exe
  stage: package
  tags:
    - docker
    - only

sign:linux:zip:
  artifacts:
    paths:
      - ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip
      - ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip.sig
    expire_in: 1 hrs
  before_script:
    - gpg2 --import <(echo "${PGP_PRIVATE_KEY_BLOCK}")
    - gpg2 --list-keys
  dependencies:
    - package:linux:zip
  image: fedora:29
  only:
    - master
  script:
    - gpg2 --detach-sign --default-key ${PGP_FINGERPRINT} ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip
    - gpg2 --verify ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip.sig ${PACKAGE_NAME}-${PACKAGE_VERSION}-linux-${PACKAGE_ARCH}.zip
  stage: sign
  tags:
    - docker
    - only

sign:windows:zip:
  artifacts:
    paths:
      - ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip
      - ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip.sig
    expire_in: 1 hrs
  before_script:
    - gpg2 --import <(echo "${PGP_PRIVATE_KEY_BLOCK}")
    - gpg2 --list-keys
  dependencies:
    - package:windows:zip
  image: fedora:29
  only:
    - master
  script:
    - gpg2 --detach-sign --default-key ${PGP_FINGERPRINT} ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip
    - gpg2 --verify ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip.sig ${PACKAGE_NAME}-${PACKAGE_VERSION}-windows-${PACKAGE_ARCH}.zip
  stage: sign
  tags:
    - docker
    - only

release:docker:image:
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  only:
    - master
  script:
    - docker pull ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${PACKAGE_NAME}:${PACKAGE_VERSION}
    - docker tag ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${PACKAGE_NAME}:${PACKAGE_VERSION} ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${PACKAGE_NAME}:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${PACKAGE_NAME}:latest
  stage: release
  tags:
    - docker
    - shell
